<%- include('modules/top') %>

<title>Toll Station Passes | TollNet Solutions</title>

<script src="/check-token.js"></script>

</head><body style="text-align:center;">

<%- include('modules/header') %>

<main>

	<div class="content">
		
		<div id="feed-get-stations"></div>
		<h1>Toll Station Passes</h1>
		
		<p>
			Get toll station passes for a specific period
		</p>
		<p>
			<div class="dropdown" id="op-select" value="">
				<div class="dropdown-trigger">
					<button class="button" aria-haspopup="true" aria-controls="dropdown-menu-op">
						<span>Choose station</span>
						<span class="icon is-small">
							<i class="fas fa-angle-down" aria-hidden="true"></i>
						</span>
					</button>
				</div>
				<div class="dropdown-menu" id="dropdown-menu-op" role="menu">
					<div class="dropdown-content">
						<!-- added by js -->
					</div>
				</div>
			</div>
		</p>
		<p>
			<input
				class="input is-info"
				style="max-width: 20em;"
				type="text"
				placeholder="Start date (YYYYMMDD)"
				value = "20220101"
			/>
			<input
				class="input is-info"
				style="max-width: 20em;"
				type="text"
				placeholder="End date (YYYYMMDD)"
				value = "20230101"
			/>
		</p>
		<p>
			<button class="button is-info is-dark" onclick="getPasses()">Get Passes</button>
		</p>

		<div id="feed-getpasses"></div>

	</div>
</main>

<script>

function initStations(){

const responseEl = document.getElementById('feed-get-stations');
const opsSelect = document.getElementById('op-select').querySelector('.dropdown-content');

//msg(responseEl, 'loading...');

apiRequest('stations')
	.then(data => {
		responseEl.innerHTML="";
		for(const i of data.stations){
			op = document.createElement('a');
			op.href = "#";
			op.className = "dropdown-item";
			op.innerHTML = i.name + " (" + i.id + ")";
			opsSelect.appendChild(op);
		}
		applyDropdownFunctionality(document.getElementById('op-select'));
		applyDropdownTriggers(document.getElementById('op-select'));
	})
	.catch(error => {
		console.log(error);
		msg(responseEl, 'error', error)
	}
);
}

initStations();

function getPasses(){

	const responseEl = document.getElementById('feed-getpasses');

	let stationId = document.querySelector('#op-select').getAttribute('value');
	// split at parenthesis
	stationId = stationId.split('(');
	stationId = stationId[stationId.length - 1];
	stationId = stationId.replace(')', '');
	console.log('id',stationId);

	const startDate = document.querySelector('input[placeholder="Start date (YYYYMMDD)"]').value;
	const endDate = document.querySelector('input[placeholder="End date (YYYYMMDD)"]').value;

	//Date Valition
	const startValidation = isValidDate(startDate);
	const endValidation = isValidDate(endDate);
	
	if (!startValidation.valid) {
        msg(responseEl, 'error', startValidation.message);
        return;
    }

    if (!endValidation.valid) {
        msg(responseEl, 'error', endValidation.message);
        return;
    }

	if (!stationId || !startDate || !endDate) {
		msg(responseEl, 'error', 'Please enter all fields');
		return;
	}

	apiRequest(`tollstationpasses/${stationId}/${startDate}/${endDate}`, 'GET')
		.then(data => {
			msg(responseEl, 'success', data)
			msg(responseEl, 'success', JSON.stringify(data.passList, null, 2));

			let html = `
					<table class="table"><thead></thead>
					<tbody>
						<tr><th>Index</th><th>Pass ID</th><th>Timestamp</th><th>Tag ID</th><th>Tag Provider</th><th>Pass Type</th><th>Pass Charge</th></tr>
	`;

				for (let i = 0; i < data.passList.length; i++) {
					let obj = data.passList[i];
					html += `
						<tr>
							<td>${obj.passIndex}</td>
							<td>${obj.passID}</td>
							<td>${obj.timestamp}</td>
							<td>${obj.tagID}</td>
							<td>${obj.tagProvider}</td>
							<td>${obj.passType}</td>
							<td>${obj.passCharge}</td>
						</tr>
					`;
				}
				
				html += `
					</tbody>
				`;

				responseEl.innerHTML = html;
		})
		.catch(error => {
			const errorMessage = error.message || error.toString();
			msg(responseEl, 'error', errorMessage)
		}
	);

}

function isValidDate(date) {
    const dateRegex = /^\d{4}(0[1-9]|1[0-2])(0[1-9]|[12][0-9]|3[01])$/;

    // Validating the date format
    if (!dateRegex.test(date)) {
        return {
            valid: false,
            message: 'Date must be in YYYYMMDD format with valid year, month, and day.'
        };
    }

    //Validate if it's a real date
    const year = parseInt(date.substring(0, 4), 10);
    const month = parseInt(date.substring(4, 6), 10) - 1; 
    const day = parseInt(date.substring(6, 8), 10);

    const dt = new Date(year, month, day);
    if (
        dt.getFullYear() !== year ||
        dt.getMonth() !== month ||
        dt.getDate() !== day
    ) {
        return {
            valid: false,
            message: 'Invalid date. Please check the day, month, and year values.'
        };
    }

    return { valid: true, message: '' };
}

</script>

<%- include('modules/bottom') %>


