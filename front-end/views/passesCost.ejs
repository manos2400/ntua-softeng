<%- include('modules/top') %>

<title>Passes Cost | TollNet Solutions</title>

</head><body style="text-align:center;">

<%- include('modules/header') %>

<main>

	<div class="content">
		
		<div id="feed-get-ops"></div>
		<h1>Passes Cost</h1>

		<p>
			Get the cost of passes performed by a specific tag operator in the road of another operator
		</p>
		<p>
			<div class="dropdown" id="op-select" value="">
				<div class="dropdown-trigger">
					<button class="button" aria-haspopup="true" aria-controls="dropdown-menu-opstation">
						<span>Choose station operator</span>
						<span class="icon is-small">
							<i class="fas fa-angle-down" aria-hidden="true"></i>
						</span>
					</button>
				</div>
				<div class="dropdown-menu" id="dropdown-menu-opstation" role="menu">
					<div class="dropdown-content">
						<!-- added by js -->
					</div>
				</div>
			</div>
			<div class="dropdown" id="op-tag-select" value="">
				<div class="dropdown-trigger">
					<button class="button" aria-haspopup="true" aria-controls="dropdown-menu-optag">
						<span>Choose tag operator</span>
						<span class="icon is-small">
							<i class="fas fa-angle-down" aria-hidden="true"></i>
						</span>
					</button>
				</div>
				<div class="dropdown-menu" id="dropdown-menu-optag" role="menu">
					<div class="dropdown-content">
						<!-- added by js -->
					</div>
				</div>
			</div>
		</p>
		<p>
			<label for="startDate">Start Date:</label>
            <input
                id="startDate"
                class="input is-info"
                style="max-width: 15em;"
                type="date"
                value="2022-01-01"
			/>
			<label for="endDate">End Date:</label>
            <input
                id="endDate"
                class="input is-info"
                style="max-width: 15em;"
                type="date"
                value="2023-01-01"
			/>
		</p>
		<p>
			<!--
			<div class="dropdown" id="format-select" value="">
				<div class="dropdown-trigger">
				  <button class="button" aria-haspopup="true" aria-controls="dropdown-menu3">
					<span>Choose format</span>
					<span class="icon is-small">
					  <i class="fas fa-angle-down" aria-hidden="true"></i>
					</span>
				  </button>
				</div>
				<div class="dropdown-menu" id="dropdown-menu3" role="menu">
				  <div class="dropdown-content">
					<a href="#" class="dropdown-item"> csv </a>
					<a href="#" class="dropdown-item"> json </a>
				  </div>
				</div>
			  </div>-->
		</p>
		<p>
			<button class="button is-info is-dark" onclick="getCost()">Get Cost</button>
		</p>

		<div id="feed-getcost"></div>

	</div>

</main>

<script>

function initOps(){

const responseEl = document.getElementById('feed-get-ops');
const opsSelect = document.getElementById('op-select').querySelector('.dropdown-content');
const tagSelect = document.getElementById('op-tag-select').querySelector('.dropdown-content');

//msg(responseEl, 'loading...');

apiRequest('operators')
	.then(data => {
		responseEl.innerHTML="";
		for(const i of data.operators){
			op = document.createElement('a');
			op.href = "#";
			op.className = "dropdown-item";
			op.innerHTML = i.name + " (" + i.id + ")";
			opsSelect.appendChild(op);
			tagSelect.appendChild(op.cloneNode(true));
		}
		applyDropdownFunctionality(document.getElementById('op-select'));
		applyDropdownTriggers(document.getElementById('op-select'));
		applyDropdownFunctionality(document.getElementById('op-tag-select'));
		applyDropdownTriggers(document.getElementById('op-tag-select'));
	})
	.catch(error => {
		console.log(error);
		msg(responseEl, 'error', error)
	}
);
}

initOps();

function getCost(){
	
	const responseEl = document.getElementById('feed-getcost');

	let stationOp = document.querySelector('#op-select').getAttribute('value');
	stationOp = stationOp.match(/\(([^)]+)\)/);
	if(stationOp && stationOp.length > 1){
		stationOp = stationOp[1];
	} else {
		stationOp = null;
	}
	let tagOp = document.querySelector('#op-tag-select').getAttribute('value');
	tagOp = tagOp.match(/\(([^)]+)\)/);
	if(tagOp && tagOp.length > 1){
		tagOp = tagOp[1];
	} else {
		tagOp = null;
	}
	
	//const format = document.querySelector('#format-select').getAttribute('value');

	// Validate the dates
    const startDate = document.getElementById('startDate').value;
    const endDate = document.getElementById('endDate').value;

	if (!startDate || !endDate) {
        msg(responseEl, 'error', 'Please provide both start and end dates.');
        return;
    }

	// Convert dates to the required format
    const formattedStartDate = startDate.replace(/-/g, '');
    const formattedEndDate = endDate.replace(/-/g, '');

	const format = 'json';

	if (!format) {
		msg(responseEl, 'error', 'Please choose a format');
		return;
	}

	if (!stationOp || !tagOp || !startDate || !endDate || !format) {
		msg(responseEl, 'error', 'Please enter all fields');
		return;
	}

	const apicall = `passesCost/${stationOp}/${tagOp}/${formattedStartDate}/${formattedEndDate}?format=${format}`;
	apiRequest(apicall, 'GET', null, format)
	.then(data => {

	let final_data_list = {};

		if(format == 'json'){

			if(data.error){
				msg(responseEl, 'warn', data.error);
				return;
			}
			
			msg(responseEl, 'success', JSON.stringify(data, null, 2));
			let html = `
					<table class="table"><thead></thead>
					<tbody>
						<tr><th>Number of passes</th><td>${data.n_passes}</td></tr>
						<tr><th>Total passes cost</th><td>${data.passesCost.toFixed(2)}</td></tr> 
					</tbody>
				`;

				responseEl.innerHTML = html;
		}
})
		.catch(error => {
			msg(responseEl, 'error', error)
		}
	);
}


</script>

<%- include('modules/bottom') %>
