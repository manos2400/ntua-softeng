<%- include('modules/top') %>

<title>Pass Analysis | TollNet Solutions</title>

</head><body style="text-align:center;">

<%- include('modules/header') %>

<main>
	<div class="content">
		
		<div id="feed-get-ops"></div>
		<div id="feed-get-stations"></div>
		<h1>Pass Analysis</h1>

		<p>
			Get the analysis of passes performed by a specific tag operator in the road of another operator
		</p>
		<p>
			<div class="dropdown" id="op-select" value="">
				<div class="dropdown-trigger">
					<button class="button" aria-haspopup="true" aria-controls="dropdown-menu-opstation">
						<span>Choose station operator</span>
						<span class="icon is-small">
							<i class="fas fa-angle-down" aria-hidden="true"></i>
						</span>
					</button>
				</div>
				<div class="dropdown-menu" id="dropdown-menu-opstation" role="menu">
					<div class="dropdown-content">
						<!-- added by js -->
					</div>
				</div>
			</div>
			<div class="dropdown" id="op-tag-select" value="">
				<div class="dropdown-trigger">
					<button class="button" aria-haspopup="true" aria-controls="dropdown-menu-optag">
						<span>Choose tag operator</span>
						<span class="icon is-small">
							<i class="fas fa-angle-down" aria-hidden="true"></i>
						</span>
					</button>
				</div>
				<div class="dropdown-menu" id="dropdown-menu-optag" role="menu">
					<div class="dropdown-content">
						<!-- added by js -->
					</div>
				</div>
			</div>
		</p>
		<p>
			<label for="startDate">Start Date:</label>
            <input
                id="startDate"
                class="input is-info"
                style="max-width: 15em;"
                type="date"
                value="2022-01-01"
			/>
			<label for="endDate">End Date:</label>
            <input
                id="endDate"
                class="input is-info"
                style="max-width: 15em;"
                type="date"
                value="2023-01-01"
			/>
		</p>
		<p>
			<button class="button is-info is-dark" id="getBtn" onclick="getAnalysis()">Get Analysis</button>
		</p>

		<div id="feed-getanalysis"></div>

	</div>
</main>

<script>

const matchedStations = {};
const getBtn = document.getElementById('getBtn');

function matchStations(){

	const responseEl = document.getElementById('feed-get-stations');

	getBtn.disabled = true;
	//msg(responseEl, 'info', 'loading...');

	apiRequest('stations')
		.then(data => {
			responseEl.innerHTML="";
			for(const i of data.stations){
				matchedStations[i.id] = i.name;
			}
			getBtn.disabled = false;
		})
		.catch(error => {
			console.log(error);
			msg(responseEl, 'error', error)
		}
	);
}
matchStations();

function initOps(){

	const responseEl = document.getElementById('feed-get-ops');
	const opsSelect = document.getElementById('op-select').querySelector('.dropdown-content');
	const tagSelect = document.getElementById('op-tag-select').querySelector('.dropdown-content');

	//msg(responseEl, 'info', 'loading...');
	getBtn.disabled = true;

	apiRequest('operators')
		.then(data => {
			responseEl.innerHTML="";
			for(const i of data.operators){
				op = document.createElement('a');
				op.href = "#";
				op.className = "dropdown-item";
				op.innerHTML = i.name + " (" + i.id + ")";
				opsSelect.appendChild(op);
				tagSelect.appendChild(op.cloneNode(true));
			}
			applyDropdownFunctionality(document.getElementById('op-select'));
			applyDropdownTriggers(document.getElementById('op-select'));
			applyDropdownFunctionality(document.getElementById('op-tag-select'));
			applyDropdownTriggers(document.getElementById('op-tag-select'));
			getBtn.disabled = false;
		})
		.catch(error => {
			console.log(error);
			msg(responseEl, 'error', error)
		}
	);
}

initOps();

function getAnalysis(){
	
	const responseEl = document.getElementById('feed-getanalysis');

	let stationOp = document.querySelector('#op-select').getAttribute('value');
	stationOp = stationOp.match(/\(([^)]+)\)/);
	if(stationOp && stationOp.length > 1){
		stationOp = stationOp[1];
	} else {
		stationOp = null;
	}
	let tagOp = document.querySelector('#op-tag-select').getAttribute('value');
	tagOp = tagOp.match(/\(([^)]+)\)/);
	if(tagOp && tagOp.length > 1){
		tagOp = tagOp[1];
	} else {
		tagOp = null;
	}

	// Validate the dates
    const startDate = document.getElementById('startDate').value;
    const endDate = document.getElementById('endDate').value;

	if (!startDate || !endDate) {
        msg(responseEl, 'error', 'Please provide both start and end dates.');
        return;
    }

	// Convert dates to the required format
    const formattedStartDate = startDate.replace(/-/g, '');
    const formattedEndDate = endDate.replace(/-/g, '');


	if (!stationOp || !tagOp || !startDate || !endDate) {
		msg(responseEl, 'error', 'Please enter all fields');
		return;
	}

	const apicall = `passAnalysis/${stationOp}/${tagOp}/${formattedStartDate}/${formattedEndDate}`;
	apiRequest(apicall, 'GET')
		.then(data => {

			if(data.error){
				msg(responseEl, 'warn', data.error);
				return;
			}

			msg(responseEl, 'success', data)
			msg(responseEl, 'success', JSON.stringify(data.passList, null, 2));

			/*
			{ "passIndex": 1, "passID": 2026, "stationID": "AM06", "timestamp": "2022-01-01T07:11:00.000Z", "tagID": "AMLJH75LX", "passCharge": 3.6 },
			 */

		let html = `
					<table class="table"><thead></thead>
					<tbody>
						<tr><th>Index</th><th>Pass ID</th><th>Station ID</th><th>Timestamp</th><th>Tag ID</th><th>Pass Charge</th></tr>
	`;

				for (let i = 0; i < data.passList.length; i++) {
					let obj = data.passList[i];
					html += `
						<tr>
							<td>${obj.passIndex}</td>
							<td>${obj.passID}</td>
							<td>${matchedStations[obj.stationID]} (${obj.stationID})</td>
							<td>${formatTimestamp(obj.timestamp)}</td>
							<td>${obj.tagID}</td>
							<td>${obj.passCharge}</td>
						</tr>
					`;
				}
				
				
				html += `
					</tbody>
				`;

				responseEl.innerHTML = html;
		})
		.catch(error => {
			msg(responseEl, 'error', error)
		}
	);
}



</script>

<%- include('modules/bottom') %>
